@{
    ViewBag.Title = "Home Page";
}
<style>
    #content label {
        width: 150px;
    }

    input {
          width: 98%;
          padding: 1%;
        }

    .error {
        color: red;
    }

    .color-default {
        color: #000;
    }

    .color-red {
        color: red;
    }

    .color-green {
        color: green;
    }

    #content input.ng-dirty.ng-invalid {
        border: 1px solid red;
        background-color: rgb(255, 244, 244);
    }

</style>

<div class="jumbotron">
    <h1>To Do List</h1>
</div>

<div ng-app="myApp">
    <div id="TaskController" ng-controller="TaskController">
        <div class="container">
            <form ng-submit="submitForm()" name="frmTask">
                <div class="row">
                    <div class="col-md-2">
                        <div>
                            <label for="task">Task Name</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <input type="text" ng-model="task.TaskName" name="cname" placeholder="Enter your name" required ng-minlength="5" ng-maxlength="50" />
                    </div>
                    <div class="col-md-4">
                        <div>
                            <span class="error" ng-show="(frmTask.$dirty||submitted) && frmTask.cname.$error.required">Task name is Required</span>
                            <span class="error" ng-show="frmTask.$dirty && frmTask.cname.$error.minlength">Minimum length required is 5</span>
                            <span class="error" ng-show="frmTask.$dirty && frmTask.cname.$error.maxlength">Maximum length is 50</span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <div>
                            <label for="int">SortOrder</label>
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div>
                            <input type="text" ng-model="task.SortOrder" name="sortorder" placeholder="Enter sort order" required />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <div>
                            <input type="submit" value="Add Task" ng-disabled="frmTask.$invalid">
                        </div>
                    </div>
                </div>
            </form>
            <br />
    <div id="content">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Task Id</th>
                    <th>Task Name</th>
                    <th> </th>
                    <th> </th>
                </tr>
            </thead>
            <tr ng-repeat="x in products">
                <td>{{x.TaskId}}</td>
                <td>{{x.TaskName}}</td>
                <td><button class='edit-task' data-id="{{x.TaskId}}">Edit</button></td>
                <td><a ng-click="deleteRecord(x.TaskId);" title="Delete"><span class="glyphicon glyphicon-trash"></span></a></td>
            </tr>
        </table>
         
    </div>
        </div>
    </div>

</div>

<!-- modal-->
<div id='editTaskModal' class='modal fade in' data-url='@Url.Action("EditTask")'>
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">

            </div>
            <div class="modal-body">
                <div id='modal-container'>
                </div>

            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>   
</div>




@section scripts{
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/angular.min.js"></script>
    <script src="~/Scripts/angular-route.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/bootbox.min.js"></script>
    <script>
        var app = angular.module('myApp', []);

        app.controller('TaskController', function ($scope, $http, $location, $window) {
                $scope.task = {};
                $scope.message = '';
                $scope.result = "color-default";
                $scope.isViewLoading = false;

                $http.get('/Home/GetData/').then(function (response) {
                    $scope.products = response.data;
                });

                $scope.myfunction = function () {
                    $http.get('/Home/GetData/').then(function (response) {
                        $scope.products = response.data;
                    });
                }

                $scope.deleteRecord = function (id) {
                    var confirmed = false;
                    bootbox.confirm("Delete this record?",
                        function (result) {
                            if (!result) return;

                            // delete the selected record
                            var fields = $scope.fields;
                            var url = "/Home/DeleteRecord/" + id;
                            $http.get(url)
                              .then(function (response) {
                                  $scope.products = response.data;
                              });
                        });
                };

                //get called when user submits the form
                $scope.submitForm = function () {
                    $scope.isViewLoading = true;
                    console.log('Form is submitted with:', $scope.task);

                    //$http service that send or receive data from the remote server
                    $http({
                        method: 'POST',
                        url: '/Home/CreateTask',
                        data: $scope.task
                    }).then(function (response) {
                        $scope.status = response.status;
                        $scope.data = response.data;
                        $scope.errors = [];
                        if ($scope.status === 200) {
                            $scope.task = {};
                            $scope.message = 'Form data Submitted!';
                            $scope.result = "color-green";
                            $scope.products = response.data;
                        }
                        else {
                            $scope.errors = data.errors;
                        }
                    },function (data, status, headers, config) {
                        $scope.errors = [];
                        $scope.message = 'Unexpected Error while saving data!!';
                    });
                    $scope.isViewLoading = false;
                }
            })
            .config(function ($locationProvider) {

                //default = 'false'
                $locationProvider.html5Mode(true);
            });

        $(document).ready(function () {
            $("div#content").on('click', 'button.edit-task', function (e) {
                e.stopPropagation();  
                var id = $(this).data("id");
                var url = $('#editTaskModal').data('url') + '/' + id;

                $.get(url, function (data) {
                    $('#modal-container').html(data);

                    $('#editTaskModal').modal('show');
                    return false;
                });
            });

            $('#editTaskModal').on('hidden.bs.modal', function () {
                angular.element('#TaskController').scope().myfunction();
            });

        });

        var confirmed = function(result)
        {
            if (result)
            {
                angular.element('#TaskController').scope().deleteRecord();

            }
        }
    </script>
}